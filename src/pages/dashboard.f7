<template>
  <div class="page" data-name="dashboard">
    <div class="page-content">
      <div class="block-title">Resumen General</div>
      <div class="grid grid-cols-2 grid-gap">
        <div class="card card-outline">
          <div class="card-content card-content-padding text-align-center">
            <i class="icon f7-icons size-32 color-blue">chat_bubble_2_fill</i>
            <div class="text-lg font-bold" id="conversaciones-activas">0</div>
            <div class="text-sm text-muted">Conversaciones activas</div>
          </div>
        </div>
        <div class="card card-outline">
          <div class="card-content card-content-padding text-align-center">
            <i class="icon f7-icons size-32 color-red">bell_badge_fill</i>
            <div class="text-lg font-bold" id="mensajes-pendientes">0</div>
            <div class="text-sm text-muted">Mensajes pendientes</div>
          </div>
        </div>
        <div class="card card-outline">
          <div class="card-content card-content-padding text-align-center">
            <i class="icon f7-icons size-32 color-green">person_2_fill</i>
            <div class="text-lg font-bold" id="clientes-total">0</div>
            <div class="text-sm text-muted">Clientes registrados</div>
          </div>
        </div>
        <div class="card card-outline">
          <div class="card-content card-content-padding text-align-center">
            <i class="icon f7-icons size-32 color-orange"
              >checkmark_circle_fill</i
            >
            <div class="text-lg font-bold" id="conversaciones-finalizadas">
              0
            </div>
            <div class="text-sm text-muted">Finalizadas hoy</div>
          </div>
        </div>
      </div>

      <!-- Accesos r√°pidos -->
      <div class="block-title">Accesos r√°pidos</div>
      <div class="list simple-list">
        <ul>
          <li>
            <a href="#" class="item-link panel-open" data-panel="left">
              <i class="icon f7-icons color-blue">message_fill</i>
              <span>Mensajes</span>
              <span
                class="badge color-red"
                id="badge-mensajes"
                style="display: none"
                >0</span
              >
            </a>
          </li>
          <li>
            <a href="/sistema/usuarios" class="item-link">
              <i class="icon f7-icons color-green">person_3_fill</i>
              <span>Usuarios</span>
            </a>
          </li>
          <li>
            <a href="/sistema/configuraciones" class="item-link">
              <i class="icon f7-icons color-gray">gear_alt_fill</i>
              <span>Configuraciones</span>
            </a>
          </li>
        </ul>
      </div>
    </div>
  </div>
</template>

<script>
  import { getConversaciones, getClientes } from "../js/services/index.js";

  export default (props, { $f7, $f7ready }) => {
    const cargarEstadisticas = async () => {
      try {
        console.log("üîÑ Iniciando carga de estad√≠sticas...");

        const usuarioId = Number(localStorage.getItem("usuarioId"));
        if (!usuarioId) {
          console.warn("‚ùå No hay usuarioId en localStorage");
          return;
        }

        console.log("üë§ Usuario ID:", usuarioId);

        const [conversaciones, clientes] = await Promise.all([
          getConversaciones(),
          getClientes(),
        ]);

        console.log("üìä Datos obtenidos:", {
          conversaciones: conversaciones.length,
          clientes: clientes.length,
        });

        const misConversaciones = conversaciones.filter(
          (conv) => conv.usuarioId == usuarioId
        );
        const conversacionesActivas = misConversaciones.filter(
          (conv) => conv.estadoId == 2
        ).length;

        let totalMensajesNoLeidos = 0;
        misConversaciones.forEach((conv) => {
          if (
            conv.nroMensajesUltNoLeidos &&
            conv.estadoMensajeUltNoLeido == 3
          ) {
            totalMensajesNoLeidos += conv.nroMensajesUltNoLeidos;
          }
        });

        const conversacionesFinalizadasHoy = misConversaciones.filter(
          (conv) =>
            conv.estadoId == 3 &&
            new Date(conv.fechaFinalizacion).toDateString() ===
              new Date().toDateString()
        ).length;

        console.log("üìà Estad√≠sticas calculadas:", {
          conversacionesActivas,
          totalMensajesNoLeidos,
          clientesTotal: clientes.length,
          conversacionesFinalizadasHoy,
        });

        // ‚úÖ Funci√≥n auxiliar para actualizar elemento de forma segura
        const actualizarElemento = (id, valor) => {
          const elemento = document.getElementById(id);
          if (elemento) {
            elemento.textContent = valor;
            console.log(`‚úÖ ${id} actualizado: ${valor}`);
          } else {
            console.warn(`‚ö†Ô∏è Elemento '${id}' no encontrado en el DOM`);
          }
        };

        // ‚úÖ Actualizar UI de forma segura
        actualizarElemento("conversaciones-activas", conversacionesActivas);
        actualizarElemento("mensajes-pendientes", totalMensajesNoLeidos);
        actualizarElemento("clientes-total", clientes.length);
        actualizarElemento(
          "conversaciones-finalizadas",
          conversacionesFinalizadasHoy
        );

        // ‚úÖ Badge en mensajes de forma segura
        const badge = document.getElementById("badge-mensajes");
        if (badge) {
          if (totalMensajesNoLeidos > 0) {
            badge.textContent = totalMensajesNoLeidos;
            badge.style.display = "inline-block";
            console.log(`‚úÖ Badge actualizado: ${totalMensajesNoLeidos}`);
          } else {
            badge.style.display = "none";
            console.log("‚úÖ Badge ocultado (sin mensajes)");
          }
        } else {
          console.warn("‚ö†Ô∏è Badge de mensajes no encontrado");
        }

        console.log("‚úÖ Estad√≠sticas cargadas correctamente");
      } catch (error) {
        console.error("‚ùå Error cargando estad√≠sticas:", error);

        // ‚úÖ Mostrar notificaci√≥n de error al usuario
        if ($f7) {
          $f7.notification
            .create({
              text: "Error al cargar estad√≠sticas del dashboard",
              closeTimeout: 3000,
            })
            .open();
        }
      }
    };

    $f7ready(() => {
      console.log("Dashboard VIP2CARS cargado");

      // Cargar estad√≠sticas al iniciar
      setTimeout(() => {
        cargarEstadisticas();
      }, 1000);

      // Recargar cada 30 segundos
      setInterval(cargarEstadisticas, 30000);
    });

    return $render;
  };
</script>
