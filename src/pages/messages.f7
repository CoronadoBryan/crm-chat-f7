<template>
  <div class="page">
    <div class="navbar">
      <div class="navbar-bg"></div>
      <div class="navbar-inner sliding">
        <div class="left">
          <a href="#" class="link back">
            <i class="icon icon-back"></i>
            <span class="if-not-md">Back</span>
          </a>
        </div>
        <div class="title">Chat</div>
      </div>
    </div>
    
    <div class="toolbar messagebar">
      <div class="toolbar-inner">
        <a class="link icon-only" @click=${sheetToggle}>
          <i class="icon f7-icons if-not-md">camera_fill</i>
          <i class="icon material-icons md-only">camera_alt</i>
        </a>
        <div class="messagebar-area">
          <textarea class="resizable" placeholder="Mensaje"></textarea>
        </div>
        <a class="link icon-only demo-send-message-link" @click=${sendMessage}>
          <i class="icon f7-icons if-not-md">arrow_up_circle_fill</i>
          <i class="icon material-icons md-only">send</i>
        </a>
      </div>
      <div class="messagebar-sheet">
        ${images.map((image) => $h`
        <label class="checkbox messagebar-sheet-image" @change=${handleAttachment}>
          <input type="checkbox" />
          <i class="icon icon-checkbox"></i>
          <img src=${image} />
        </label>
        `)}
      </div>
    </div>
    
    <div class="page-content messages-content">
      <div class="messages">
        <div class="messages-title"><b>Hoy</b></div>
        <div class="message message-sent">
          <div class="message-content">
            <div class="message-bubble">
              <div class="message-text">Hola, ¿cómo estás?</div>
            </div>
          </div>
        </div>
        <div class="message message-received">
          <div class="message-avatar" style="background-image:url(https://cdn.framework7.io/placeholder/people-100x100-9.jpg)"></div>
          <div class="message-content">
            <div class="message-name">Cliente</div>
            <div class="message-bubble">
              <div class="message-text">¡Hola! Todo bien, gracias</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
  export default (props, { $f7, $el, $on, $ }) => {
    const images = [
      'https://cdn.framework7.io/placeholder/cats-300x300-1.jpg',
      'https://cdn.framework7.io/placeholder/cats-200x300-2.jpg',
      'https://cdn.framework7.io/placeholder/cats-400x300-3.jpg',
    ];

    const answers = [
      'Perfecto!',
      'Entendido',
      'Déjame verificar eso',
      '¿Podrías dar más detalles?',
      'Gracias por contactarnos',
      'Te ayudo con eso',
    ];

    let responseInProgress = false;
    let messagebar;
    let messages;

    const sheetToggle = () => {
      messagebar.sheetToggle();
    };

    const handleAttachment = (e) => {
      var index = $(e.target).parents('label.checkbox').index();
      var image = images[index];
      if (e.target.checked) {
        messagebar.attachments.unshift(image);
      } else {
        messagebar.attachments.splice(messagebar.attachments.indexOf(image), 1);
      }
      messagebar.renderAttachments();
      checkAttachments();
    };

    const checkAttachments = () => {
      if (messagebar.attachments.length > 0) {
        messagebar.attachmentsShow();
        messagebar.setPlaceholder('Agregar comentario o Enviar');
      } else {
        messagebar.attachmentsHide();
        messagebar.setPlaceholder('Mensaje');
      }
    };

    const sendMessage = () => {
      var text = messagebar.getValue().replace(/\n/g, '<br />').trim();
      var messagesToSend = [];

      messagebar.attachments.forEach(function (attachment) {
        var size = attachment.split('placeholder/cats-')[1].split('-')[0].split('x');
        messagesToSend.push({
          image: '<img src="' + attachment + '" style="width: ' + (size[0] / 2) + 'px; height: ' + (size[1] / 2) + 'px">'
        });
      });

      if (text.trim().length) {
        messagesToSend.push({
          text: text
        });
      }

      messagebar.attachments = [];
      checkAttachments();
      messagebar.sheetHide();
      messagebar.$sheetEl.find('input').prop('checked', false);
      messagebar.clear();

      if (text.length) messagebar.focus();
      if (!messagesToSend.length) return;

      messages.addMessages(messagesToSend);

      // Respuesta automática simulada
      if (responseInProgress) return;
      responseInProgress = true;
      
      setTimeout(function () {
        var answer = answers[Math.floor(Math.random() * answers.length)];
        messages.showTyping({
          header: 'Cliente escribiendo...',
          avatar: 'https://cdn.framework7.io/placeholder/people-100x100-9.jpg'
        });
        
        setTimeout(function () {
          messages.addMessage({
            text: answer,
            type: 'received',
            name: 'Cliente',
            avatar: 'https://cdn.framework7.io/placeholder/people-100x100-9.jpg'
          });
          messages.hideTyping();
          responseInProgress = false;
        }, 2000);
      }, 1000);
    };

    $on('pageInit', () => {
      messagebar = $f7.messagebar.create({
        el: $el.value.find('.messagebar'),
        attachments: []
      });
      
      messages = $f7.messages.create({
        el: $el.value.find('.messages'),
        firstMessageRule: function (message, previousMessage, nextMessage) {
          if (message.isTitle) return false;
          if (!previousMessage || previousMessage.type !== message.type || previousMessage.name !== message.name) return true;
          return false;
        },
        lastMessageRule: function (message, previousMessage, nextMessage) {
          if (message.isTitle) return false;
          if (!nextMessage || nextMessage.type !== message.type || nextMessage.name !== message.name) return true;
          return false;
        },
        tailMessageRule: function (message, previousMessage, nextMessage) {
          if (message.isTitle) return false;
          if (!nextMessage || nextMessage.type !== message.type || nextMessage.name !== message.name) return true;
          return false;
        }
      });
    });

    $on('pageBeforeRemove', () => {
      messagebar.destroy();
      messages.destroy();
    });

    return $render;
  };
</script>